{"version":3,"sources":["constants.js","helper/index.js","context/index.js","components/TrackCard/index.jsx","pages/PlaylistPage/index.jsx","components/MediaPlayer/index.jsx","pages/PlayingPage/index.jsx","pages/HomePage/index.jsx","components/BottomNavigation/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["NAPSTER_API_KEY","getCurrentSongData","trackId","a","fetch","response","json","result","tracks","albumId","previewURL","artistName","name","console","log","thumbnailSrc","songSrc","getTopTracks","responseTracks","forEach","track","newItem","push","songContext","createContext","currentSong","setCurrentSong","SongProvider","children","initialSong","useState","Provider","value","useStyles","makeStyles","theme","root","display","marginBottom","details","flexDirection","content","flex","cover","width","objectFit","float","marginLeft","controls","minWidth","alignItems","paddingLeft","spacing","paddingBottom","TrackCard","useTheme","classes","useContext","Card","className","CardContent","Typography","component","variant","color","Button","startIcon","onClick","Link","to","CardMedia","image","Text","styled","h1","Subtitle","div","TrackList","map","index","Loader","PlaylistPage","React","setTracks","isLoading","setIsLoading","useEffect","fetchTopTracks","MediaControlCard","style","marginTop","src","NoSongPlayed","PlayingPage","fetchSongDetails","HomePageWrapper","Header","HomePage","fontSize","navbar","backgroundColor","left","bottom","overflow","position","BottomNavigationComponent","setValue","BottomNavigation","onChange","event","newValue","handleChange","showLabels","BottomNavigationAction","label","icon","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f68e7f8.chunk.js","sourcesContent":["export const NAPSTER_API_KEY = \"ZTk2YjY4MjMtMDAzYy00MTg4LWE2MjYtZDIzNjJmMmM0YTdm\";","import { NAPSTER_API_KEY } from \"../constants\";\r\n\r\nexport const getCurrentSongData = async (trackId) => {\r\n  const response = await fetch(\r\n    `https://api.napster.com/v2.1/tracks/${trackId}?apikey=${NAPSTER_API_KEY}`\r\n  );\r\n  const result = await response.json();\r\n  const { albumId, previewURL, artistName, name } = await result.tracks[0];\r\n  console.log(result.tracks[0]);\r\n  return {\r\n    thumbnailSrc: `https://api.napster.com/imageserver/v2/albums/${albumId}/images/356x237.jpg`,\r\n    songSrc: previewURL,\r\n    name: name,\r\n    artistName: artistName,\r\n  };\r\n};\r\n\r\nexport const getTopTracks = async () => {\r\n    let tracks = [];\r\n    const response = await fetch(\r\n      `https://api.napster.com/v2.1/tracks/top?apikey=${NAPSTER_API_KEY}`\r\n    );\r\n    const { tracks: responseTracks } = await response.json();\r\n    await responseTracks.forEach(track => {\r\n        const newItem = {\r\n            thumbnailSrc: `https://api.napster.com/imageserver/v2/albums/${track.albumId}/images/356x237.jpg`,\r\n            name: track.name,\r\n            artistName: track.artistName,\r\n            trackId: track.trackId,\r\n            songSrc: track.previewURL,\r\n        }\r\n        tracks.push(newItem);\r\n    });\r\n    return tracks;\r\n  };\r\n","import React, {useState, createContext } from \"react\";\r\n\r\nexport const songContext = createContext({\r\n  currentSong:  {\r\n    thumbnailSrc: \"\",\r\n    songSrc: \"\",\r\n    name: \"\",\r\n    artistName: \"\",\r\n    trackId: \"\"\r\n  },\r\n  setCurrentSong: () => undefined,\r\n});\r\n\r\nexport const SongProvider = ({ children, initialSong }) => {\r\n  const [currentSong, setCurrentSong] = useState(initialSong);\r\n  return (\r\n    <songContext.Provider\r\n      value={{\r\n        currentSong,\r\n        setCurrentSong,\r\n      }}\r\n    >\r\n      {children}\r\n    </songContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { songContext } from \"../../context\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PlayIcon from \"@material-ui/icons/PlayArrow\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    marginBottom: \"20px\",\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\",\r\n  },\r\n  cover: {\r\n    width: \"151px\",\r\n    objectFit: \"cover\",\r\n    float: \"right\",\r\n    marginLeft: \"auto\",\r\n  },\r\n  controls: {\r\n    display: \"flex\",\r\n    minWidth: \"50vw\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function TrackCard({\r\n  name,\r\n  artistName,\r\n  thumbnailSrc,\r\n  trackId,\r\n  songSrc,\r\n}) {\r\n  const theme = useTheme();\r\n  const classes = useStyles(theme);\r\n  const { setCurrentSong } = useContext(songContext);\r\n\r\n  const handlePlay = () => {\r\n    setCurrentSong({ name, artistName, thumbnailSrc, trackId, songSrc });\r\n  };\r\n  return (\r\n    <Card className={classes.root}>\r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <Typography component=\"h5\" variant=\"h5\">\r\n            {name}\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n            {artistName}\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            startIcon={<PlayIcon />}\r\n            onClick={() => handlePlay()}\r\n            component={Link}\r\n            to=\"/playing\"\r\n          >\r\n            Play\r\n          </Button>\r\n        </CardContent>\r\n      </div>\r\n      <CardMedia className={classes.cover} image={thumbnailSrc} />\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { getTopTracks } from \"../../helper\";\r\nimport styled from \"styled-components\";\r\nimport TrackCard from \"../../components/TrackCard\";\r\n\r\nconst Text = styled.h1`\r\n  color: white;\r\n`;\r\n\r\nconst Subtitle = styled.div`\r\n  font-weight: 700;\r\n  color: white;\r\n`;\r\n\r\nconst TrackList = ({ tracks }) => {\r\n  return tracks.map((track, index) => (\r\n    <TrackCard\r\n      name={track.name}\r\n      trackId={track.trackId}\r\n      thumbnailSrc={track.thumbnailSrc}\r\n      artistName={track.artistName}\r\n      songSrc={track.songSrc}\r\n      key={index}\r\n    />\r\n  ));\r\n};\r\n\r\nconst Loader = () => {\r\n  return <Subtitle>Loading.. Please wait..</Subtitle>;\r\n};\r\n\r\nconst PlaylistPage = () => {\r\n  const [tracks, setTracks] = React.useState([]);\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setIsLoading(true);\r\n    async function fetchTopTracks() {\r\n      const result = await getTopTracks();\r\n      setTracks(result);\r\n    }\r\n    fetchTopTracks();\r\n    setIsLoading(false);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Text>Playlist Page</Text>\r\n      {isLoading ? <Loader /> : <TrackList tracks={tracks} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaylistPage;","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    details: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    content: {\r\n        flex: \"1 0 auto\"\r\n    },\r\n    cover: {\r\n        width: \"151px\",\r\n        objectFit: \"cover\",\r\n        float: \"right\",\r\n        marginLeft: \"auto\"\r\n    },\r\n    controls: {\r\n        display: \"flex\",\r\n        minWidth: \"50vw\",\r\n        alignItems: \"center\",\r\n        paddingLeft: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nexport default function MediaControlCard({\r\n    name,\r\n    artistName,\r\n    thumbnailSrc,\r\n    songSrc\r\n}) {\r\n    const theme = useTheme();\r\n    const classes = useStyles(theme);\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.root}>\r\n                <div className={classes.details}>\r\n                    <CardContent className={classes.content}>\r\n                        <Typography component=\"h5\" variant=\"h5\">\r\n                            {name}\r\n                        </Typography>\r\n                        <Typography component=\"subtitle1\" variant=\"textSecondary\">\r\n                            {artistName}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </div>\r\n                <CardMedia \r\n                    className={classes.cover}\r\n                    image={thumbnailSrc}\r\n                    component=\"img\"\r\n                />\r\n            </Card>\r\n            <div style={{marginTop: '10px'}}>\r\n                <audio src={songSrc} controls style={{ width: \"100%\"}} />\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { songContext } from \"../../context\";\r\nimport { getCurrentSongData } from \"../../helper\";\r\nimport MediaPlayer from \"../../components/MediaPlayer\";\r\n\r\nconst Text = styled.h1`\r\n    color: white;\r\n`;\r\n\r\nconst NoSongPlayed = () => {\r\n    return <Text>No Music Played. Please choose music first at playlist!</Text>\r\n}\r\n\r\nconst PlayingPage = () => {\r\n    const { currentSong, setCurrentSong } = React.useContext(songContext);\r\n\r\n    React.useEffect(() => {\r\n        async function fetchSongDetails() {\r\n            const {\r\n                thumbnailSrc,\r\n                name,\r\n                artistName,\r\n                songSrc\r\n            } = await getCurrentSongData(currentSong.trackId);\r\n\r\n            console.log(songSrc);\r\n            setCurrentSong({\r\n                ...currentSong,\r\n                thumbnailSrc,\r\n                name,\r\n                artistName,\r\n                songSrc\r\n            });\r\n        }\r\n        currentSong.trackId && fetchSongDetails();\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {(currentSong.trackId === '') && <NoSongPlayed />}\r\n            {(currentSong.trackId !== '') && (\r\n                <>\r\n                    <Text>\r\n                        Current Playing...\r\n                    </Text>\r\n                    <MediaPlayer\r\n                        name={currentSong.name}\r\n                        thumbnailSrc={currentSong.thumbnailSrc}\r\n                        songSrc={currentSong.songSrc}\r\n                        artistName={currentSong.artistName}\r\n                    />\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlayingPage;","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\n\r\nconst HomePageWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-contents: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Header = styled.h1`\r\n  color: #DFE6E9;\r\n  text-align: center;\r\n`;\r\nconst Subtitle = styled.div`\r\n  color: #DFE6E9;\r\n`;\r\n\r\nconst HomePage = () => {\r\n  return <HomePageWrapper>\r\n    <MusicNoteIcon style={{ color: 'white', fontSize: '100px'}}/>\r\n    <Header>\r\n      Welcome to MyPlayer\r\n    </Header>\r\n    <Subtitle>\r\n      Play your favorite song here.\r\n    </Subtitle>\r\n  </HomePageWrapper>;\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\n\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"100vw\",\r\n    },\r\n    content: {\r\n        color: \"#2D3436\",\r\n    },\r\n    navbar: {\r\n        backgroundColor: \"#DFE6E9\",\r\n        left: 0,\r\n        bottom: 0,\r\n        width: \"100%\",\r\n        overflow: \"hidden\",\r\n        position: \"fixed\"\r\n    },\r\n});\r\n\r\nconst BottomNavigationComponent = () => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(\"recents\");\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    }\r\n\r\n    return (\r\n        <BottomNavigation\r\n            value={value}\r\n            onChange={(event, newValue) => handleChange(event, newValue)}\r\n            className={classes.navbar}\r\n            showLabels\r\n        >\r\n            <BottomNavigationAction\r\n                component={Link}\r\n                to=\"/\"\r\n                label=\"Home\"\r\n                value=\"home\"\r\n                icon={<HomeIcon />}\r\n                className={classes.content}\r\n            />\r\n            <BottomNavigationAction\r\n                component={Link}\r\n                to=\"/playing\"\r\n                label=\"Playing\"\r\n                value=\"playing\"\r\n                icon={<PlayArrowIcon />}\r\n                className={classes.content}\r\n            />\r\n            <BottomNavigationAction\r\n                component={Link}\r\n                to=\"/playlist\"\r\n                label=\"Playlist\"\r\n                value=\"playlist\"\r\n                icon={<PlaylistPlayIcon />}\r\n                className={classes.content}\r\n            />\r\n        </BottomNavigation>\r\n    );\r\n}\r\n\r\nexport default BottomNavigationComponent;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport './App.css';\nimport PlaylistPage from \"./pages/PlaylistPage\";\nimport PlayingPage from \"./pages/PlayingPage\";\nimport HomePage from \"./pages/HomePage\";\nimport BottomNavigationComponent from \"./components/BottomNavigation\";\nimport { SongProvider } from \"./context\";\n\nfunction App() {\n  // Mempersiapkan nilai awal\n  const initialState = {\n    thumbnailSrc: \"\",\n    songSrc: \"\",\n    name: \"\",\n    artistName: \"\",\n    trackId: \"\"\n  }\n\n  return (\n    <SongProvider initialSong={initialState}>\n      <Router>\n        <Switch>\n          <Route path=\"/playing\">\n            <PlayingPage />\n          </Route>\n          <Route path=\"/playlist\">\n            <PlaylistPage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n        <BottomNavigationComponent />\n      </Router>\n    </SongProvider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}